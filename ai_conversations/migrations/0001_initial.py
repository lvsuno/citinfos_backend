# Generated by Django 4.2.24 on 2025-09-29 10:49

import datetime
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIConversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('total_tokens_used', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=10)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('context_window', models.PositiveIntegerField(default=10)),
                ('auto_summarize', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System'), ('function', 'Function')], max_length=20)),
                ('message_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('file', 'File'), ('code', 'Code'), ('function_call', 'Function Call'), ('function_result', 'Function Result')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('input_tokens', models.PositiveIntegerField(default=0)),
                ('output_tokens', models.PositiveIntegerField(default=0)),
                ('cost', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=8)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('is_error', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_conversations.aiconversation')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='LLMModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('model_type', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic'), ('google', 'Google'), ('huggingface', 'Hugging Face'), ('custom', 'Custom')], max_length=20)),
                ('model_id', models.CharField(max_length=200)),
                ('api_endpoint', models.URLField(blank=True)),
                ('max_tokens', models.PositiveIntegerField(default=4096)),
                ('temperature', models.FloatField(default=0.7, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)])),
                ('top_p', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('cost_per_input_token', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=10)),
                ('cost_per_output_token', models.DecimalField(decimal_places=8, default=Decimal('0'), max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deprecated', 'Deprecated'), ('maintenance', 'Maintenance')], default='active', max_length=20)),
                ('daily_request_limit', models.PositiveIntegerField(default=1000)),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=60)),
                ('supports_streaming', models.BooleanField(default=True)),
                ('supports_function_calling', models.BooleanField(default=False)),
                ('supports_vision', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['model_type', 'status'], name='ai_conversa_model_t_206a59_idx'), models.Index(fields=['status', '-created_at'], name='ai_conversa_status_4598c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='ConversationAgent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('agent_type', models.CharField(choices=[('assistant', 'General Assistant'), ('expert', 'Domain Expert'), ('tutor', 'Educational Tutor'), ('custom', 'Custom Role')], max_length=20)),
                ('description', models.TextField(max_length=1000)),
                ('system_prompt', models.TextField(help_text="System prompt that defines the agent's personality and role")),
                ('temperature_override', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)])),
                ('max_tokens_override', models.PositiveIntegerField(blank=True, null=True)),
                ('can_browse_web', models.BooleanField(default=False)),
                ('can_analyze_images', models.BooleanField(default=False)),
                ('can_generate_images', models.BooleanField(default=False)),
                ('can_code', models.BooleanField(default=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='agents/avatars/')),
                ('is_public', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('total_conversations', models.PositiveIntegerField(default=0)),
                ('total_messages', models.PositiveIntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
                ('preferred_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_conversations.llmmodel')),
            ],
        ),
        migrations.CreateModel(
            name='AIUsageAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('conversations_started', models.PositiveIntegerField(default=0)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('tokens_consumed', models.PositiveIntegerField(default=0)),
                ('total_cost', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=10)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('average_response_time', models.FloatField(default=0.0)),
                ('image_analysis_requests', models.PositiveIntegerField(default=0)),
                ('code_generation_requests', models.PositiveIntegerField(default=0)),
                ('web_browsing_requests', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_usage', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AIModelPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('failed_requests', models.PositiveIntegerField(default=0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('average_tokens_per_request', models.FloatField(default=0.0)),
                ('total_cost', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=12)),
                ('average_user_rating', models.FloatField(default=0.0)),
                ('total_user_ratings', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='ai_conversations.llmmodel')),
            ],
        ),
        migrations.CreateModel(
            name='AIMessageRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='ai_conversations.aimessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AIMessageFlag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flag_type', models.CharField(choices=[('safety_issue', 'Safety Issue'), ('inappropriate', 'Inappropriate'), ('factual_error', 'Factual Error'), ('outdated', 'Outdated Info'), ('off_topic', 'Off Topic')], max_length=30)),
                ('comment', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='ai_conversations.aimessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='aimessage',
            name='model_used',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_conversations.llmmodel'),
        ),
        migrations.CreateModel(
            name='AIConversationSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title_suggestion', models.CharField(blank=True, max_length=200)),
                ('summary_text', models.TextField()),
                ('key_topics', models.JSONField(blank=True, default=list)),
                ('message_count_at_summary', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='ai_conversations.aiconversation')),
                ('summary_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_conversations.llmmodel')),
            ],
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='agent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='ai_conversations.conversationagent'),
        ),
        migrations.AddField(
            model_name='aiconversation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_conversations', to='accounts.userprofile'),
        ),
        migrations.AddIndex(
            model_name='conversationagent',
            index=models.Index(fields=['agent_type', 'is_active'], name='ai_conversa_agent_t_e5a871_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationagent',
            index=models.Index(fields=['is_public', 'is_active'], name='ai_conversa_is_publ_29de16_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationagent',
            index=models.Index(fields=['created_by', '-created_at'], name='ai_conversa_created_dc60c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aiusageanalytics',
            unique_together={('user', 'date')},
        ),
        migrations.AddIndex(
            model_name='aimodelperformance',
            index=models.Index(fields=['model', '-date'], name='ai_conversa_model_i_87c2e2_idx'),
        ),
        migrations.AddIndex(
            model_name='aimodelperformance',
            index=models.Index(fields=['date', '-average_user_rating'], name='ai_conversa_date_57d499_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aimodelperformance',
            unique_together={('model', 'date')},
        ),
        migrations.AddIndex(
            model_name='aimessagerating',
            index=models.Index(fields=['message', '-created_at'], name='ai_conversa_message_ab6395_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aimessagerating',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='aimessageflag',
            index=models.Index(fields=['flag_type', '-created_at'], name='ai_conversa_flag_ty_4a51a6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aimessageflag',
            unique_together={('message', 'user', 'flag_type')},
        ),
        migrations.AddIndex(
            model_name='aimessage',
            index=models.Index(fields=['conversation', 'created_at'], name='ai_conversa_convers_eb8007_idx'),
        ),
        migrations.AddIndex(
            model_name='aimessage',
            index=models.Index(fields=['role', '-created_at'], name='ai_conversa_role_999cd5_idx'),
        ),
        migrations.AddIndex(
            model_name='aimessage',
            index=models.Index(fields=['message_type', '-created_at'], name='ai_conversa_message_939c03_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversationsummary',
            index=models.Index(fields=['conversation', '-updated_at'], name='ai_conversa_convers_b87921_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['user', '-last_message_at'], name='ai_conversa_user_id_9a9217_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['agent', '-created_at'], name='ai_conversa_agent_i_dad77f_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['status', '-updated_at'], name='ai_conversa_status_7c4189_idx'),
        ),
    ]
