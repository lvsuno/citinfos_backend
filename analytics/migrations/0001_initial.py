# Generated by Django 4.2.25 on 2025-10-14 14:25

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        ('accounts', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('response_time', 'Response Time'), ('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('database_query_time', 'Database Query Time'), ('cache_hit_rate', 'Cache Hit Rate'), ('error_rate', 'Error Rate'), ('active_users', 'Active Users'), ('concurrent_connections', 'Concurrent Connections')], max_length=30)),
                ('value', models.FloatField()),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['metric_type', '-recorded_at'], name='analytics_s_metric__5639ff_idx')],
            },
        ),
        migrations.CreateModel(
            name='DailyAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True)),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('total_users', models.PositiveIntegerField(default=0)),
                ('new_posts', models.PositiveIntegerField(default=0)),
                ('new_comments', models.PositiveIntegerField(default=0)),
                ('total_likes', models.PositiveIntegerField(default=0)),
                ('total_shares', models.PositiveIntegerField(default=0)),
                ('total_interactions', models.PositiveIntegerField(default=0)),
                ('avg_session_duration', models.DurationField(blank=True, null=True)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['-date'], name='analytics_d_date_8ce489_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuthenticationReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('jwt_valid_count', models.PositiveIntegerField(default=0)),
                ('jwt_expired_session_renewal_count', models.PositiveIntegerField(default=0)),
                ('session_only_count', models.PositiveIntegerField(default=0)),
                ('unauthenticated_count', models.PositiveIntegerField(default=0)),
                ('authentication_failed_count', models.PositiveIntegerField(default=0)),
                ('avg_jwt_validation_time', models.FloatField(default=0.0)),
                ('avg_session_lookup_time', models.FloatField(default=0.0)),
                ('avg_total_auth_time', models.FloatField(default=0.0)),
                ('p50_auth_time', models.FloatField(default=0.0)),
                ('p95_auth_time', models.FloatField(default=0.0)),
                ('p99_auth_time', models.FloatField(default=0.0)),
                ('overall_success_rate', models.FloatField(default=0.0)),
                ('jwt_success_rate', models.FloatField(default=0.0)),
                ('session_success_rate', models.FloatField(default=0.0)),
                ('jwt_renewals_count', models.PositiveIntegerField(default=0)),
                ('avg_token_age_at_renewal', models.FloatField(default=0.0)),
                ('unique_users_count', models.PositiveIntegerField(default=0)),
                ('unique_sessions_count', models.PositiveIntegerField(default=0)),
                ('top_endpoints', models.JSONField(blank=True, default=list)),
                ('error_patterns', models.JSONField(blank=True, default=list)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-period_start'],
                'indexes': [models.Index(fields=['report_type', '-period_start'], name='analytics_a_report__1e157e_idx'), models.Index(fields=['-generated_at'], name='analytics_a_generat_9fa2c1_idx'), models.Index(fields=['-avg_total_auth_time'], name='analytics_a_avg_tot_5f7260_idx')],
                'unique_together': {('report_type', 'period_start')},
            },
        ),
        migrations.CreateModel(
            name='UserAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_posts', models.PositiveIntegerField(default=0)),
                ('total_comments', models.PositiveIntegerField(default=0)),
                ('total_likes_given', models.PositiveIntegerField(default=0)),
                ('total_likes_received', models.PositiveIntegerField(default=0)),
                ('total_shares_made', models.PositiveIntegerField(default=0)),
                ('total_shares_received', models.PositiveIntegerField(default=0)),
                ('communities_joined', models.PositiveIntegerField(default=0)),
                ('communities_created', models.PositiveIntegerField(default=0)),
                ('community_posts', models.PositiveIntegerField(default=0)),
                ('community_moderation_actions', models.PositiveIntegerField(default=0)),
                ('followers_gained', models.PositiveIntegerField(default=0)),
                ('followers_lost', models.PositiveIntegerField(default=0)),
                ('following_count', models.PositiveIntegerField(default=0)),
                ('mutual_connections', models.PositiveIntegerField(default=0)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('total_page_views', models.PositiveIntegerField(default=0)),
                ('total_time_spent', models.DurationField(default=datetime.timedelta(0))),
                ('avg_session_duration', models.DurationField(blank=True, null=True)),
                ('longest_session_duration', models.DurationField(blank=True, null=True)),
                ('peak_activity_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('most_active_day_of_week', models.PositiveIntegerField(blank=True, null=True)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('successful_searches', models.PositiveIntegerField(default=0)),
                ('user_searches', models.PositiveIntegerField(default=0)),
                ('avg_search_results_clicked', models.FloatField(default=0.0)),
                ('recommendations_shown', models.PositiveIntegerField(default=0)),
                ('recommendations_clicked', models.PositiveIntegerField(default=0)),
                ('recommendations_acted_upon', models.PositiveIntegerField(default=0)),
                ('recommendation_feedback_given', models.PositiveIntegerField(default=0)),
                ('content_quality_score', models.FloatField(default=0.0)),
                ('reputation_score', models.FloatField(default=0.0)),
                ('trust_score', models.FloatField(default=0.0)),
                ('helpfulness_score', models.FloatField(default=0.0)),
                ('mobile_sessions', models.PositiveIntegerField(default=0)),
                ('desktop_sessions', models.PositiveIntegerField(default=0)),
                ('tablet_sessions', models.PositiveIntegerField(default=0)),
                ('preferred_platform', models.CharField(blank=True, max_length=20)),
                ('countries_accessed_from', models.JSONField(blank=True, default=list)),
                ('most_common_location', models.CharField(blank=True, max_length=100)),
                ('timezone_preferences', models.JSONField(blank=True, default=dict)),
                ('features_used', models.JSONField(blank=True, default=list)),
                ('advanced_features_adopted', models.PositiveIntegerField(default=0)),
                ('feature_adoption_rate', models.FloatField(default=0.0)),
                ('days_since_registration', models.PositiveIntegerField(default=0)),
                ('days_active', models.PositiveIntegerField(default=0)),
                ('retention_score', models.FloatField(default=0.0)),
                ('churn_risk_score', models.FloatField(default=0.0)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('preferred_categories', models.JSONField(blank=True, default=list)),
                ('browsing_patterns', models.JSONField(blank=True, default=dict)),
                ('engagement_score', models.FloatField(default=0.0)),
                ('activity_level', models.CharField(choices=[('very_low', 'Very Low'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('very_high', 'Very High')], default='low', max_length=20)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('last_activity_date', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='accounts.userprofile')),
            ],
            options={
                'indexes': [models.Index(fields=['user', '-last_calculated'], name='analytics_u_user_id_031549_idx'), models.Index(fields=['-engagement_score'], name='analytics_u_engagem_7a15ba_idx'), models.Index(fields=['-reputation_score'], name='analytics_u_reputat_57c258_idx'), models.Index(fields=['activity_level', '-last_calculated'], name='analytics_u_activit_54211d_idx'), models.Index(fields=['-churn_risk_score'], name='analytics_u_churn_r_31cbb0_idx')],
            },
        ),
        migrations.CreateModel(
            name='SessionAnalytic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField()),
                ('last_activity', models.DateTimeField()),
                ('expires_at', models.DateTimeField()),
                ('creation_time_ms', models.FloatField(help_text='Time to create session (ms)')),
                ('created_event_at', models.DateTimeField(blank=True, help_text='When creation event was recorded', null=True)),
                ('renewal_count', models.PositiveIntegerField(default=0)),
                ('last_renewal_time_ms', models.FloatField(blank=True, help_text='Time for last renewal (ms)', null=True)),
                ('total_renewal_time_ms', models.FloatField(default=0.0, help_text='Cumulative renewal time (ms)')),
                ('avg_renewal_time_ms', models.FloatField(default=0.0, help_text='Average renewal time (ms)')),
                ('last_renewed_at', models.DateTimeField(blank=True, null=True)),
                ('first_renewed_at', models.DateTimeField(blank=True, null=True)),
                ('smart_renewals', models.PositiveIntegerField(default=0)),
                ('last_smart_renewal_at', models.DateTimeField(blank=True, null=True)),
                ('unnecessary_renewals_prevented', models.PositiveIntegerField(default=0)),
                ('expiry_check_count', models.PositiveIntegerField(default=0)),
                ('last_expiry_check_time_ms', models.FloatField(blank=True, help_text='Time for last expiry check (ms)', null=True)),
                ('total_expiry_check_time_ms', models.FloatField(default=0.0, help_text='Cumulative expiry check time (ms)')),
                ('last_expired_checked_at', models.DateTimeField(blank=True, null=True)),
                ('session_actually_expired', models.BooleanField(default=False)),
                ('session_expired_at', models.DateTimeField(blank=True, null=True)),
                ('ended_count', models.PositiveIntegerField(default=0)),
                ('last_ended_time_ms', models.FloatField(blank=True, help_text='Time for last session end (ms)', null=True)),
                ('last_ended_checked_at', models.DateTimeField(blank=True, null=True)),
                ('manually_ended_at', models.DateTimeField(blank=True, null=True)),
                ('ended_reason', models.CharField(blank=True, help_text='Specific reason for session termination', max_length=100)),
                ('cleanup_count', models.PositiveIntegerField(default=0)),
                ('last_cleanup_time_ms', models.FloatField(blank=True, help_text='Time for last cleanup (ms)', null=True)),
                ('total_cleanup_time_ms', models.FloatField(default=0.0, help_text='Cumulative cleanup time (ms)')),
                ('last_cleanup_checked_at', models.DateTimeField(blank=True, null=True)),
                ('automated_cleanup_at', models.DateTimeField(blank=True, null=True)),
                ('lookup_count', models.PositiveIntegerField(default=0)),
                ('total_processing_time_ms', models.FloatField(default=0.0, help_text='Sum of all event processing times')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('location_data', models.JSONField(blank=True, default=dict)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('end_reason', models.CharField(blank=True, max_length=20)),
                ('additional_metadata', models.JSONField(blank=True, default=dict)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='analytics_s_user_id_cfab25_idx'), models.Index(fields=['session_id'], name='analytics_s_session_35515a_idx'), models.Index(fields=['-last_activity'], name='analytics_s_last_ac_7b6c17_idx'), models.Index(fields=['expires_at'], name='analytics_s_expires_2e5323_idx'), models.Index(fields=['-lookup_count'], name='analytics_s_lookup__33f130_idx')],
            },
        ),
        migrations.CreateModel(
            name='SearchAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query', models.TextField()),
                ('query_hash', models.CharField(db_index=True, max_length=64)),
                ('normalized_query', models.TextField()),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('search_type', models.CharField(choices=[('users', 'User Search'), ('communities', 'Community Search'), ('posts', 'Post Search'), ('global', 'Global Search')], max_length=20)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('sort_criteria', models.CharField(blank=True, max_length=50)),
                ('total_results', models.PositiveIntegerField(default=0)),
                ('results_page', models.PositiveIntegerField(default=1)),
                ('results_per_page', models.PositiveIntegerField(default=20)),
                ('search_time_ms', models.FloatField(default=0.0)),
                ('database_query_time_ms', models.FloatField(default=0.0)),
                ('elasticsearch_time_ms', models.FloatField(blank=True, null=True)),
                ('clicked_results', models.JSONField(blank=True, default=list)),
                ('click_through_rate', models.FloatField(default=0.0)),
                ('first_click_position', models.PositiveIntegerField(blank=True, null=True)),
                ('time_to_first_click_ms', models.FloatField(blank=True, null=True)),
                ('resulted_in_action', models.BooleanField(default=False)),
                ('user_refined_search', models.BooleanField(default=False)),
                ('zero_results', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('suggested_terms', models.JSONField(blank=True, default=list)),
                ('autocomplete_used', models.BooleanField(default=False)),
                ('voice_search', models.BooleanField(default=False)),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['query_hash'], name='analytics_s_query_h_5a048b_idx'), models.Index(fields=['search_type', '-searched_at'], name='analytics_s_search__b3a5b8_idx'), models.Index(fields=['user', '-searched_at'], name='analytics_s_user_id_855cce_idx'), models.Index(fields=['-search_time_ms'], name='analytics_s_search__d715d8_idx'), models.Index(fields=['zero_results', '-searched_at'], name='analytics_s_zero_re_ed549d_idx'), models.Index(fields=['-click_through_rate'], name='analytics_s_click_t_c8bb5f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], max_length=10)),
                ('message', models.TextField()),
                ('stack_trace', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('method', models.CharField(blank=True, max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('extra_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['level', '-created_at'], name='analytics_e_level_500065_idx'), models.Index(fields=['user', '-created_at'], name='analytics_e_user_id_8d36e7_idx'), models.Index(fields=['is_resolved', '-created_at'], name='analytics_e_is_reso_fa034b_idx')],
            },
        ),
        migrations.CreateModel(
            name='ContentAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('post', 'Post'), ('comment', 'Comment'), ('thread', 'Thread'), ('community_post', 'Community Post')], max_length=20)),
                ('content_id', models.UUIDField()),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('dislike_count', models.PositiveIntegerField(default=0)),
                ('share_count', models.PositiveIntegerField(default=0)),
                ('comment_count', models.PositiveIntegerField(default=0)),
                ('reply_count', models.PositiveIntegerField(default=0)),
                ('avg_read_time_seconds', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('click_through_rate', models.FloatField(default=0.0)),
                ('engagement_velocity', models.FloatField(default=0.0)),
                ('peak_engagement_hour', models.PositiveIntegerField(blank=True, null=True)),
                ('viral_coefficient', models.FloatField(default=0.0)),
                ('top_countries', models.JSONField(blank=True, default=list)),
                ('demographic_data', models.JSONField(blank=True, default=dict)),
                ('quality_score', models.FloatField(default=0.0)),
                ('moderation_flags', models.PositiveIntegerField(default=0)),
                ('positive_sentiment_ratio', models.FloatField(default=0.0)),
                ('first_engagement_at', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_analytics', to='accounts.userprofile')),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='analytics_c_content_6541da_idx'), models.Index(fields=['author', '-created_at'], name='analytics_c_author__e4d3db_idx'), models.Index(fields=['-engagement_rate'], name='analytics_c_engagem_01b1aa_idx'), models.Index(fields=['-quality_score'], name='analytics_c_quality_eb7825_idx'), models.Index(fields=['-view_count'], name='analytics_c_view_co_7b10af_idx')],
                'unique_together': {('content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='CommunityAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('current_online_members', models.PositiveIntegerField(default=0)),
                ('peak_online_today', models.PositiveIntegerField(default=0)),
                ('peak_online_this_week', models.PositiveIntegerField(default=0)),
                ('peak_online_this_month', models.PositiveIntegerField(default=0)),
                ('daily_active_members', models.PositiveIntegerField(default=0)),
                ('weekly_active_members', models.PositiveIntegerField(default=0)),
                ('monthly_active_members', models.PositiveIntegerField(default=0)),
                ('total_threads_today', models.PositiveIntegerField(default=0)),
                ('total_posts_today', models.PositiveIntegerField(default=0)),
                ('total_comments_today', models.PositiveIntegerField(default=0)),
                ('total_likes_today', models.PositiveIntegerField(default=0)),
                ('new_members_today', models.PositiveIntegerField(default=0)),
                ('new_members_this_week', models.PositiveIntegerField(default=0)),
                ('new_members_this_month', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='communities.community')),
            ],
            options={
                'indexes': [models.Index(fields=['community', '-date'], name='analytics_c_communi_72d83b_idx'), models.Index(fields=['community', 'current_online_members'], name='analytics_c_communi_d7a305_idx'), models.Index(fields=['-last_updated'], name='analytics_c_last_up_86425d_idx')],
                'unique_together': {('community', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AuthenticationMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auth_method', models.CharField(choices=[('jwt_valid', 'JWT Valid (Direct)'), ('jwt_expired_session_renewal', 'JWT Expired - Session Renewal'), ('session_only', 'Session Only (Legacy)'), ('unauthenticated', 'Unauthenticated'), ('authentication_failed', 'Authentication Failed')], max_length=30)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('jwt_validation_time', models.FloatField(blank=True, help_text='Time to validate JWT token (ms)', null=True)),
                ('session_lookup_time', models.FloatField(blank=True, help_text='Time to lookup session data (ms)', null=True)),
                ('total_auth_time', models.FloatField(help_text='Total authentication processing time (ms)')),
                ('endpoint', models.CharField(blank=True, max_length=200)),
                ('http_method', models.CharField(blank=True, max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('success', models.BooleanField()),
                ('error_message', models.TextField(blank=True)),
                ('jwt_renewed', models.BooleanField(default=False)),
                ('token_age_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('token_remaining_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['auth_method', '-timestamp'], name='analytics_a_auth_me_c5e08a_idx'), models.Index(fields=['user', '-timestamp'], name='analytics_a_user_id_28727f_idx'), models.Index(fields=['success', '-timestamp'], name='analytics_a_success_e64710_idx'), models.Index(fields=['jwt_renewed', '-timestamp'], name='analytics_a_jwt_ren_31de81_idx'), models.Index(fields=['-total_auth_time'], name='analytics_a_total_a_d75d25_idx')],
            },
        ),
    ]
