# Generated by Django 4.2.25 on 2025-10-14 14:25

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('community_type', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('restricted', 'Restricted')], default='public', max_length=10)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='communities/avatars/')),
                ('cover_media', models.FileField(blank=True, help_text='Image or short video file used as community cover.', null=True, upload_to='communities/covers/media/')),
                ('cover_media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video')], default='image', max_length=10)),
                ('rules', models.JSONField(blank=True, default=list)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('allow_posts', models.BooleanField(default=True)),
                ('require_post_approval', models.BooleanField(default=False)),
                ('allow_external_links', models.BooleanField(default=True)),
                ('members_count', models.PositiveIntegerField(default=0)),
                ('posts_count', models.PositiveIntegerField(default=0)),
                ('threads_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_communities', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('permissions', models.JSONField(default=dict)),
                ('color', models.CharField(default='#000000', max_length=7)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='communities.community')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CommunityModeration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('warn', 'Warning'), ('mute', 'Mute'), ('ban', 'Ban'), ('kick', 'Kick'), ('unban', 'Unban'), ('unmute', 'Unmute')], max_length=10)),
                ('reason', models.TextField(max_length=500)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions', to='communities.community')),
                ('moderator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions_taken', to='accounts.userprofile')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderation_actions_received', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('banned', 'Banned'), ('left', 'Left')], default='active', max_length=10)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('ban_reason', models.TextField(blank=True, max_length=500)),
                ('banned_at', models.DateTimeField(blank=True, null=True)),
                ('ban_expires_at', models.DateTimeField(blank=True, help_text='When the ban ends and user is reactivated.', null=True)),
                ('posts_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('leaved_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('banned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_bans_issued', to='accounts.userprofile')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='communities.community')),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_invited_memberships', to='accounts.userprofile')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='communities.communityrole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_memberships', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityJoinRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('review_message', models.TextField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='communities.community')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_requests_reviewed', to='accounts.userprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_join_requests', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CommunityInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('invite_code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='communities.community')),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_invitations_received', to='accounts.userprofile')),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_invitations_sent', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityAnnouncement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('body_html', models.TextField(help_text='Sanitized HTML content for the announcement')),
                ('is_published', models.BooleanField(default=True)),
                ('is_sticky', models.BooleanField(default=False, help_text='Sticky announcements appear at the top')),
                ('is_important', models.BooleanField(default=False, help_text='Important announcements are highlighted')),
                ('is_welcome_message', models.BooleanField(default=False, help_text='Mark this as a welcome message for new community members')),
                ('banner_style', models.CharField(choices=[('none', 'Regular Announcement (No Banner)'), ('static', 'Static Banner'), ('scrolling', 'Scrolling Banner'), ('fade', 'Fade In/Out Banner'), ('slide', 'Slide Animation Banner')], default='none', help_text='Choose how to display this announcement - as regular content or as a banner with different styles', max_length=20)),
                ('publish_at', models.DateTimeField(blank=True, help_text='Schedule announcement to be published at a specific time', null=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Automatically unpublish after this date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_announcements', to='communities.community')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_announcements_created', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-is_sticky', '-is_important', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('body', models.TextField(blank=True)),
                ('is_closed', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('allow_comments', models.BooleanField(default=True)),
                ('posts_count', models.PositiveIntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_restored', models.BooleanField(default=False)),
                ('restored_at', models.DateTimeField(blank=True, null=True)),
                ('last_deletion_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='communities.community')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_threads', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-is_pinned', '-created_at'],
                'indexes': [models.Index(fields=['community', '-created_at'], name='communities_communi_490065_idx'), models.Index(fields=['creator', '-created_at'], name='communities_creator_7ba42c_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='communityrole',
            index=models.Index(fields=['community', 'is_default'], name='communities_communi_d946c0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='communityrole',
            unique_together={('community', 'name')},
        ),
        migrations.AddIndex(
            model_name='communitymoderation',
            index=models.Index(fields=['community', 'target', 'is_active'], name='communities_communi_5c02f2_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymoderation',
            index=models.Index(fields=['moderator', '-created_at'], name='communities_moderat_684ee7_idx'),
        ),
        migrations.AddConstraint(
            model_name='communitymoderation',
            constraint=models.UniqueConstraint(fields=('community', 'moderator', 'action_type', 'target', 'is_active'), name='unique_active_moderation_action'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['community', 'status', 'role'], name='communities_communi_b6e36d_idx'),
        ),
        migrations.AddIndex(
            model_name='communitymembership',
            index=models.Index(fields=['user', 'status'], name='communities_user_id_1e5b66_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='communitymembership',
            unique_together={('community', 'user')},
        ),
        migrations.AddIndex(
            model_name='communityjoinrequest',
            index=models.Index(fields=['community', 'status'], name='communities_communi_e49f48_idx'),
        ),
        migrations.AddIndex(
            model_name='communityjoinrequest',
            index=models.Index(fields=['user', 'status'], name='communities_user_id_2f6b14_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='communityjoinrequest',
            unique_together={('community', 'user')},
        ),
        migrations.AddIndex(
            model_name='communityinvitation',
            index=models.Index(fields=['invitee', 'status'], name='communities_invitee_c4bee2_idx'),
        ),
        migrations.AddIndex(
            model_name='communityinvitation',
            index=models.Index(fields=['expires_at'], name='communities_expires_4936af_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='communityinvitation',
            unique_together={('community', 'invitee')},
        ),
        migrations.AddIndex(
            model_name='communityannouncement',
            index=models.Index(fields=['community', '-created_at'], name='communities_communi_b8577e_idx'),
        ),
        migrations.AddIndex(
            model_name='communityannouncement',
            index=models.Index(fields=['community', 'is_published', '-created_at'], name='communities_communi_1bdad1_idx'),
        ),
        migrations.AddIndex(
            model_name='communityannouncement',
            index=models.Index(fields=['created_by', '-created_at'], name='communities_created_999845_idx'),
        ),
        migrations.AddIndex(
            model_name='communityannouncement',
            index=models.Index(fields=['is_sticky', 'is_important', '-created_at'], name='communities_is_stic_d60f74_idx'),
        ),
        migrations.AddIndex(
            model_name='community',
            index=models.Index(fields=['community_type', '-created_at'], name='communities_communi_8463e8_idx'),
        ),
        migrations.AddIndex(
            model_name='community',
            index=models.Index(fields=['is_active', '-members_count'], name='communities_is_acti_c7d0d4_idx'),
        ),
        migrations.AddIndex(
            model_name='community',
            index=models.Index(fields=['is_featured', '-created_at'], name='communities_is_feat_22f34d_idx'),
        ),
    ]
