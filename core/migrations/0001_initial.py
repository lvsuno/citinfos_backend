# Generated by Django 4.2.25 on 2025-10-14 14:25

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('communities', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('iso3', models.CharField(db_index=True, max_length=3, unique=True)),
                ('iso2', models.CharField(db_index=True, max_length=2, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('code', models.IntegerField(blank=True, db_index=True, null=True)),
                ('default_admin_level', models.IntegerField(blank=True, help_text='Primary admin level (3=communes, 4=municipalities)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['iso3', 'name'], name='core_countr_iso3_b9c441_idx')],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('body_html', models.TextField(blank=True, help_text='Sanitized HTML for announcement body')),
                ('is_system_generated', models.BooleanField(default=False, help_text='True if generated automatically by the system (e.g., welcome messages)')),
                ('is_published', models.BooleanField(default=True)),
                ('is_sticky', models.BooleanField(default=False, help_text='Sticky announcements appear at the top')),
                ('is_important', models.BooleanField(default=False, help_text='Important announcements are highlighted')),
                ('is_welcome_message', models.BooleanField(default=False, help_text='Mark this as a welcome message for new users')),
                ('banner_style', models.CharField(choices=[('none', 'Regular Announcement (No Banner)'), ('static', 'Static Banner'), ('scrolling', 'Scrolling Banner'), ('fade', 'Fade In/Out Banner'), ('slide', 'Slide Animation Banner')], default='none', help_text='Choose how to display this announcement - as regular content or as a banner with different styles', max_length=20)),
                ('target_user_roles', models.JSONField(blank=True, default=list, help_text='Target specific user roles (empty = all users)')),
                ('target_countries', models.JSONField(blank=True, default=list, help_text='Target specific countries (empty = all countries)')),
                ('target_timezones', models.JSONField(blank=True, default=list, help_text='Target specific timezones (empty = all timezones)')),
                ('target_cities', models.JSONField(blank=True, default=list, help_text='Target specific cities (empty = all cities)')),
                ('target_regions', models.JSONField(blank=True, default=list, help_text='Target specific regions/states (empty = all regions)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this announcement (null for system-generated)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='global_announcements_created', to='accounts.userprofile')),
                ('target_community', models.ForeignKey(blank=True, help_text='Target all members of a specific community', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targeted_global_announcements', to='communities.community')),
                ('target_specific_user', models.ForeignKey(blank=True, help_text='Target a specific user (overrides other targeting options)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targeted_announcements', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-is_sticky', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdministrativeDivision',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('admin_level', models.IntegerField(choices=[(0, 'Country'), (1, 'State/Province/Department'), (2, 'Region/Prefecture/MRC'), (3, 'Municipality/Commune'), (4, 'Arrondissement/District'), (5, 'Village/Locality')], db_index=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('local_name', models.CharField(blank=True, max_length=200, null=True)),
                ('admin_code', models.CharField(blank=True, db_index=True, max_length=50)),
                ('local_code', models.CharField(blank=True, max_length=50)),
                ('area_geometry', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('boundary_geometry', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=4326)),
                ('point_geometry', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('centroid', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('area_sqkm', models.FloatField(blank=True, null=True)),
                ('point_type', models.CharField(blank=True, choices=[('city_hall', 'City Hall/Hotel de Ville'), ('prefecture', 'Prefecture Headquarters'), ('office', 'Administrative Office'), ('bureau', 'Bureau/Sub-office'), ('center', 'Administrative Center'), ('other', 'Other')], max_length=20)),
                ('boundary_type', models.CharField(blank=True, help_text='Dynamic boundary type (country-specific)', max_length=50)),
                ('population', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('attributes', models.JSONField(blank=True, default=dict)),
                ('data_source', models.CharField(blank=True, help_text="Source of the data (e.g., 'Benin SALB 2019')", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.country')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.administrativedivision')),
            ],
            options={
                'verbose_name_plural': 'Administrative Divisions',
                'ordering': ['country__name', 'admin_level', 'name'],
                'indexes': [models.Index(fields=['country', 'admin_level'], name='core_admini_country_3fb4cc_idx'), models.Index(fields=['country', 'admin_level', 'name'], name='core_admini_country_102f9d_idx'), models.Index(fields=['parent', 'admin_level'], name='core_admini_parent__0d3a19_idx'), models.Index(fields=['admin_code', 'country'], name='core_admini_admin_c_4fd2e7_idx'), models.Index(fields=['point_type'], name='core_admini_point_t_73c90e_idx'), models.Index(fields=['boundary_type'], name='core_admini_boundar_e21318_idx')],
                'unique_together': {('country', 'admin_level', 'admin_code')},
            },
        ),
    ]
